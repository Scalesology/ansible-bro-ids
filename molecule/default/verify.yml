---

- name: Verify
  hosts: zeek
  vars:
    is_container: false
  pre_tasks:
    - name: Debug | var ansible_virtualization_type
      ansible.builtin.debug:
        var: ansible_virtualization_type
    - name: Set fact is_container
      ansible.builtin.set_fact:
        is_container: true
      when: >
        (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd"
           or ansible_virtualization_type == "container"
          )
        )
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto
    - name: Validate that needed packages are present
      ansible.builtin.assert:
        that: ansible_facts.packages['zeek'] is defined or ansible_facts.packages['zeek-lts'] is defined

    - name: Ensure /opt/zeek/etc/zeekctl.cfg config file is present
      ansible.builtin.stat:
        path: /opt/zeek/etc/zeekctl.cfg
      register: cfg
    - name: Validate config present
      ansible.builtin.assert:
        that: cfg.stat.exists and cfg.stat.size != 0

    - name: Ensure process is running
      ansible.builtin.command: pgrep -u _zeek zeek
      register: ps
      changed_when: false
      failed_when: false
    - name: Validate ps output
      ansible.builtin.assert:
        that: ps.stdout
      when:
        - not is_container|bool

    - name: Check all processes
      ansible.builtin.command: ps aux
      changed_when: false
      failed_when: false
      register: psa
    - name: Debug | process output
      ansible.builtin.debug:
        var: psa
        verbosity: 1

    - name: Check few directories
      ansible.builtin.command: ls -l /opt/zeek/etc /opt/zeek/spool
      changed_when: false
      failed_when: false

    - name: Fetch content of /var/log/zeek/current/stderr.log
      ansible.builtin.slurp:
        src: /var/log/zeek/current/stderr.log
      register: log1
      failed_when: false
    - name: Validate /var/log/zeek/current/stderr.log
      ansible.builtin.assert:
        that: >
          "'listening on' in log1['content'] | b64decode"
      when:
        - not is_container|bool

    - name: Ensure ports are listening
      ansible.builtin.wait_for:
        host: "{{ item.h }}"
        port: "{{ item.p }}"
        timeout: 10
      with_items:
        - { h: localhost, p: "47760" }
      when:
        - not is_container|bool
