---
## https://intel.criticalstack.com/
## https://support.criticalstack.com/hc/en-us/sections/200673595-Intel-Marketplace
## https://packagecloud.io/install/repositories/intelstack/client/script.deb.sh

- name: Debian
  block:
    # 'HTTP Error 402: Payment Required' ???
    - name: Debian | Install apt key
      ansible.builtin.apt_key:
        url: 'https://packagecloud.io/intelstack/client/gpgkey'
        state: present
    - name: Debian | Install critical stack repositories
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        state: present
        filename: intelstack_client
      with_items:
        - "deb https://packagecloud.io/intelstack/client/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release | lower }} main"
        - "deb-src https://packagecloud.io/intelstack/client/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release | lower }} main"
    - name: Debian | Ensure intel-stack-client and requirements are present
      ansible.builtin.apt:
        name:
          - debian-archive-keyring
          - apt-transport-https
          - intel-stack-client
        state: present
        update_cache: yes
        cache_valid_time: 3600
      register: pkg_result
      until: pkg_result is success
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
- name: RedHat
  block:
    - name: RedHat | add critical stack repositories
      ansible.builtin.yum_repository:
        name: "{{ item.name }}"
        file: intelstack_client
        baseurl: "{{ item.baseurl }}"
        repo_gpgcheck: true
        gpgcheck: false
        enabled: true
        sslverify: true
        gpgkey: https://packagecloud.io/intelstack/client/gpgkey
        gpgcakey: /etc/pki/tls/certs/ca-bundle.crt
        metadata_expire: 300
      with_items:
        - { name: intelstack_client, baseurl: 'https://packagecloud.io/intelstack/client/el/$releasever/$basearch' }
        - { name: intelstack_client-source, baseurl: 'https://packagecloud.io/intelstack/client/el/$releasever/SRPMS' }

    - name: RedHat | install critical stack
      ansible.builtin.yum:
        name: intel-stack-client
        state: present
      become: yes
      register: pkg_result
      until: pkg_result is success
  when: ansible_os_family == "RedHat"

- name: register critical stack API key
  ansible.builtin.command: "critical-stack-intel api {{ bro_cs_apikey }}"
  args:
    creates: /opt/critical-stack/configs/critical-stack-intel.db
  become: yes
  when: bro_cs_apikey is defined and bro_cs_apikey
- name: set a proxy for critical stack
  ansible.builtin.command: "critical-stack-intel config --set proxy.url=\"{{ bro_cs_proxy }}\""
  become: yes
  when: bro_cs_proxy is defined and bro_cs_proxy

- name: check current settings in critical-stack
  ansible.builtin.command: "critical-stack-intel config --list-set"
  register: csconfig
  changed_when: false
- name: update bro setup in critical-stack
  ansible.builtin.command: "{{ item }}"
  with_items:
    - "critical-stack-intel config --set bro.path={{ bro_prefix }}"
    - "critical-stack-intel config --set bro.include.path={{ broids_site }}/local.zeek"
    - "critical-stack-intel config --set bro.broctl.path={{ broids_broctl }}"
  when: not csconfig.stdout
  notify:
    - fetch critical-stack-intel feeds
    - check zeek
    - deploy zeek
    - restart zeek

- name: allow critical-stack to auto-restart bro
  ansible.builtin.command: "critical-stack-intel config --set bro.restart=true"
  when: bro_cs_autorestart

- name: Ensure intel-stack-client service is enabled and started
  ansible.builtin.service:
    name: intel-stack-client
    enabled: true
    state: started
